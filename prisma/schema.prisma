generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Show {
  id                String     @id @default(cuid())
  artist            String
  venueId           String
  venue             Venue    @relation(fields: [venueId], references: [id])
  date              DateTime
  city               String? 
  status            ShowStatus @default(PENDING)
  description       String?
  flyerUrl          String?
  calendarEventId   String?    @unique
  calendarEventLink String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Venue {
  id                String  @id @default(cuid())
  name              String
  city              String
  shows             Show[]
}

enum ShowStatus {
  PENDING
  HOLD
  CONFIRMED
  ADVANCED
  SETTLED
}

model GoogleToken {
  id            String   @id @default(uuid())
  email         String   @unique
  accessToken   String
  refreshToken  String
  scope         String?
  tokenType     String?
  expiryDate    BigInt
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?     
  token_type         String?  
  scope              String?  
  id_token           String?  
  session_state      String?  
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
